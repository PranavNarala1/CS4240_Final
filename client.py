# -*- coding: utf-8 -*-
"""Client.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13kFYTclHrreUI3iUPsiIQagUjs_pk20L

**This file is used to make predictions for the NBA playoffs bracket for the 2007-2008, 2009-2010, 2012-2013, and 2015-2016 seasons. The predictions are made with our abstracted keras neural network class Model.py**

**Creating and Loading the Model**
"""

#importing the model
from Model import Model

#creating the model object
model = Model()

#loading the trained model
model.load_model('test_model_trained_with_all_13_seasons')

"""**2007-2008 season prediction**"""

## 1st Round of Playoffs

print("Eastern Conference 1 vs 8")
winner1v8E = model.make_prediction('Celtics', 'Hawks', '2007-08').split()[-1]
print(winner1v8E)
print("Eastern Conference 4 vs 5")
winner4v5E = model.make_prediction('Cavaliers', 'Wizards', '2007-08').split()[-1]
print(winner4v5E)
print("Eastern Conference 3 vs 6")
winner3v6E = model.make_prediction('Magic', 'Raptors', '2007-08').split()[-1]
print(winner3v6E)
print("Eastern Conference 2 vs 7")
winner2v7E = model.make_prediction('Pistons', '76ers', '2007-08').split()[-1]
print(winner2v7E)
## Eastern Conference Semis (2nd Round)

print("Eastern Conference (Winner of 1 vs 8) vs (Winner of 4 vs 5)")
winnerOf_WinnerOf1v8vsWinnerOf4v5 = model.make_prediction(winner1v8E, winner4v5E, '2007-08').split()[-1]
print(winnerOf_WinnerOf1v8vsWinnerOf4v5)
print("Eastern Conference (Winner of 2 vs 7) vs (Winner of 3 vs 6)")
winnerOf_WinnerOf2v7vsWinnerOf3v6 = model.make_prediction(winner3v6E, winner2v7E,'2007-08').split()[-1]
print(winnerOf_WinnerOf2v7vsWinnerOf3v6)
##Eastern Conference Finals (3rd Round)

print("Winner of ((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))")
ECF_winner = model.make_prediction(winnerOf_WinnerOf1v8vsWinnerOf4v5, winnerOf_WinnerOf2v7vsWinnerOf3v6,'2007-08').split()[-1]
print(ECF_winner)

## 1st Round of Playoffs

print("Western Conference 1 vs 8")
winner1v8W = model.make_prediction('Lakers', 'Nuggets', '2007-08').split()[-1]
print(winner1v8W)
print("Western Conference 4 vs 5")
winner4v5W = model.make_prediction('Jazz', 'Rockets', '2007-08').split()[-1]
print(winner4v5W)
print("Western Conference 3 vs 6")
winner3v6W = model.make_prediction('Spurs', 'Suns', '2007-08').split()[-1]
print(winner3v6W)
print("Western Conference 2 vs 7")
winner2v7W = model.make_prediction('Hornets', 'Mavericks', '2007-08').split()[-1]
print(winner2v7W)
## Western Conference Semis (2nd Round)

print("Western Conference (Winner of 1 vs 8) vs (Winner of 4 vs 5)")
winnerOf_WinnerOf1v8vsWinnerOf4v5W = model.make_prediction(winner1v8W, winner4v5W, '2007-08').split()[-1]
print(winnerOf_WinnerOf1v8vsWinnerOf4v5W)
print("Western Conference (Winner of 2 vs 7) vs (Winner of 3 vs 6)")
winnerOf_WinnerOf2v7vsWinnerOf3v6W = model.make_prediction(winner2v7W, winner3v6W, '2007-08').split()[-1]
print(winnerOf_WinnerOf2v7vsWinnerOf3v6W)
##Western Conference Finals (3rd Round)

print("Winner of ((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))")
WCF_winner = model.make_prediction(winnerOf_WinnerOf1v8vsWinnerOf4v5W, winnerOf_WinnerOf2v7vsWinnerOf3v6W, '2007-08').split()[-1]
print(WCF_winner)

print("NBA Finals")

#Winner of (((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))) vs (((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6)))
NBA_finals_winner = model.make_prediction(ECF_winner, WCF_winner, '2007-08').split()[-1]
print("NBA Champion:")
print(NBA_finals_winner)

"""**2009-2010 season**"""

## 1st Round of Playoffs

print("Eastern Conference 1 vs 8")
winner1v8E = model.make_prediction('Cavaliers', 'Bulls', '2009-10').split()[-1]
print(winner1v8E)
print("Eastern Conference 4 vs 5")
winner4v5E = model.make_prediction('Celtics', 'Heat', '2009-10').split()[-1]
print(winner4v5E)
print("Eastern Conference 3 vs 6")
winner3v6E = model.make_prediction('Hawks', 'Bucks', '2009-10').split()[-1]
print(winner3v6E)
print("Eastern Conference 2 vs 7")
winner2v7E = model.make_prediction('Magic', 'Bobcats', '2009-10').split()[-1]
print(winner2v7E)
## Eastern Conference Semis (2nd Round)

print("Eastern Conference (Winner of 1 vs 8) vs (Winner of 4 vs 5)")
winnerOf_WinnerOf1v8vsWinnerOf4v5 = model.make_prediction(winner1v8E, winner4v5E, '2009-10').split()[-1]
print(winnerOf_WinnerOf1v8vsWinnerOf4v5)
print("Eastern Conference (Winner of 2 vs 7) vs (Winner of 3 vs 6)")
winnerOf_WinnerOf2v7vsWinnerOf3v6 = model.make_prediction(winner3v6E, winner2v7E,'2009-10').split()[-1]
print(winnerOf_WinnerOf2v7vsWinnerOf3v6)
##Eastern Conference Finals (3rd Round)

print("Winner of ((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))")
ECF_winner = model.make_prediction(winnerOf_WinnerOf1v8vsWinnerOf4v5, winnerOf_WinnerOf2v7vsWinnerOf3v6,'2009-10').split()[-1]
print(ECF_winner)

## 1st Round of Playoffs

print("Western Conference 1 vs 8")
winner1v8W = model.make_prediction('Lakers', 'Thunder', '2009-10').split()[-1]
print(winner1v8W)
print("Western Conference 4 vs 5")
winner4v5W = model.make_prediction('Nuggets', 'Jazz', '2009-10').split()[-1]
print(winner4v5W)
print("Western Conference 3 vs 6")
winner3v6W = model.make_prediction('Suns', 'Blazers', '2009-10').split()[-1]
print(winner3v6W)
print("Western Conference 2 vs 7")
winner2v7W = model.make_prediction('Mavericks', 'Spurs', '2009-10').split()[-1]
print(winner2v7W)
## Western Conference Semis (2nd Round)

print("Western Conference (Winner of 1 vs 8) vs (Winner of 4 vs 5)")
winnerOf_WinnerOf1v8vsWinnerOf4v5W = model.make_prediction(winner1v8W, winner4v5W, '2009-10').split()[-1]
print(winnerOf_WinnerOf1v8vsWinnerOf4v5W)
print("Western Conference (Winner of 2 vs 7) vs (Winner of 3 vs 6)")
winnerOf_WinnerOf2v7vsWinnerOf3v6W = model.make_prediction(winner2v7W, winner3v6W, '2009-10').split()[-1]
print(winnerOf_WinnerOf2v7vsWinnerOf3v6W)
##Western Conference Finals (3rd Round)

print("Winner of ((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))")
WCF_winner = model.make_prediction(winnerOf_WinnerOf1v8vsWinnerOf4v5W, winnerOf_WinnerOf2v7vsWinnerOf3v6W, '2009-10').split()[-1]
print("Western Conference Champion")
print(WCF_winner)

## NBA Finals

#Winner of (((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))) vs (((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6)))
NBA_finals_winner = model.make_prediction(ECF_winner, WCF_winner, '2009-10').split()[-1]
print("NBA Champion:")
print(NBA_finals_winner)

"""**2012-2013 season**"""

## 1st Round of Playoffs

print("Eastern Conference 1 vs 8")
winner1v8E = model.make_prediction('Heat', 'Bucks', '2012-13').split()[-1]
print(winner1v8E)
print("Eastern Conference 4 vs 5")
winner4v5E = model.make_prediction('Nets', 'Bulls', '2012-13').split()[-1]
print(winner4v5E)
print("Eastern Conference 3 vs 6")
winner3v6E = model.make_prediction('Pacers', 'Hawks', '2012-13').split()[-1]
print(winner3v6E)
print("Eastern Conference 2 vs 7")
winner2v7E = model.make_prediction('Knicks', 'Celtics', '2012-13').split()[-1]
print(winner2v7E)
## Eastern Conference Semis (2nd Round)

print("Eastern Conference (Winner of 1 vs 8) vs (Winner of 4 vs 5)")
winnerOf_WinnerOf1v8vsWinnerOf4v5 = model.make_prediction(winner1v8E, winner4v5E, '2012-13').split()[-1]
print(winnerOf_WinnerOf1v8vsWinnerOf4v5)
print("Eastern Conference (Winner of 2 vs 7) vs (Winner of 3 vs 6)")
winnerOf_WinnerOf2v7vsWinnerOf3v6 = model.make_prediction(winner3v6E, winner2v7E,'2012-13').split()[-1]
print(winnerOf_WinnerOf2v7vsWinnerOf3v6)
##Eastern Conference Finals (3rd Round)

print("Winner of ((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))")
ECF_winner = model.make_prediction(winnerOf_WinnerOf1v8vsWinnerOf4v5, winnerOf_WinnerOf2v7vsWinnerOf3v6,'2012-13').split()[-1]
print(ECF_winner)

## 1st Round of Playoffs

print("Western Conference 1 vs 8")
winner1v8W = model.make_prediction('Thunder', 'Rockets', '2012-13').split()[-1]
print(winner1v8W)
print("Western Conference 4 vs 5")
winner4v5W = model.make_prediction('Clippers', 'Grizzlies', '2012-13').split()[-1]
print(winner4v5W)
print("Western Conference 3 vs 6")
winner3v6W = model.make_prediction('Nuggets', 'Warriors', '2012-13').split()[-1]
print(winner3v6W)
print("Western Conference 2 vs 7")
winner2v7W = model.make_prediction('Spurs', 'Lakers', '2012-13').split()[-1]
print(winner2v7W)
## Western Conference Semis (2nd Round)

print("Western Conference (Winner of 1 vs 8) vs (Winner of 4 vs 5)")
winnerOf_WinnerOf1v8vsWinnerOf4v5W = model.make_prediction(winner1v8W, winner4v5W, '2012-13').split()[-1]
print(winnerOf_WinnerOf1v8vsWinnerOf4v5W)
print("Western Conference (Winner of 2 vs 7) vs (Winner of 3 vs 6)")
winnerOf_WinnerOf2v7vsWinnerOf3v6W = model.make_prediction(winner2v7W, winner3v6W, '2012-13').split()[-1]
print(winnerOf_WinnerOf2v7vsWinnerOf3v6W)
##Western Conference Finals (3rd Round)

print("Winner of ((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))")
WCF_winner = model.make_prediction(winnerOf_WinnerOf1v8vsWinnerOf4v5W, winnerOf_WinnerOf2v7vsWinnerOf3v6W, '2012-13').split()[-1]
print("Western Conference Champion")
print(WCF_winner)

## NBA Finals

#Winner of (((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))) vs (((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6)))
NBA_finals_winner = model.make_prediction(ECF_winner, WCF_winner, '2012-13').split()[-1]
print("NBA Champion:")
print(NBA_finals_winner)

"""**2015-2016 season**"""

## 1st Round of Playoffs

print("Eastern Conference 1 vs 8")
winner1v8E = model.make_prediction('Cavaliers', 'Pistons', '2015-16').split()[-1]
print(winner1v8E)
print("Eastern Conference 4 vs 5")
winner4v5E = model.make_prediction('Hawks', 'Celtics', '2015-16').split()[-1]
print(winner4v5E)
print("Eastern Conference 3 vs 6")
winner3v6E = model.make_prediction('Heat', 'Hornets', '2015-16').split()[-1]
print(winner3v6E)
print("Eastern Conference 2 vs 7")
winner2v7E = model.make_prediction('Raptors', 'Pacers', '2015-16').split()[-1]
print(winner2v7E)
## Eastern Conference Semis (2nd Round)

print("Eastern Conference (Winner of 1 vs 8) vs (Winner of 4 vs 5)")
winnerOf_WinnerOf1v8vsWinnerOf4v5 = model.make_prediction(winner1v8E, winner4v5E, '2015-16').split()[-1]
print(winnerOf_WinnerOf1v8vsWinnerOf4v5)
print("Eastern Conference (Winner of 2 vs 7) vs (Winner of 3 vs 6)")
winnerOf_WinnerOf2v7vsWinnerOf3v6 = model.make_prediction(winner3v6E, winner2v7E,'2015-16').split()[-1]
print(winnerOf_WinnerOf2v7vsWinnerOf3v6)
##Eastern Conference Finals (3rd Round)

print("Winner of ((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))")
ECF_winner = model.make_prediction(winnerOf_WinnerOf1v8vsWinnerOf4v5, winnerOf_WinnerOf2v7vsWinnerOf3v6,'2015-16').split()[-1]
print("Eastern Conference Champion")
print(ECF_winner)

## 1st Round of Playoffs

print("Western Conference 1 vs 8")
winner1v8W = model.make_prediction('Warriors', 'Rockets', '2015-16').split()[-1]
print(winner1v8W)
print("Western Conference 4 vs 5")
winner4v5W = model.make_prediction('Clippers', 'Blazers', '2015-16').split()[-1]
print(winner4v5W)
print("Western Conference 3 vs 6")
winner3v6W = model.make_prediction('Thunder', 'Mavericks', '2015-16').split()[-1]
print(winner3v6W)
print("Western Conference 2 vs 7")
winner2v7W = model.make_prediction('Spurs', 'Grizzlies', '2015-16').split()[-1]
print(winner2v7W)
## Western Conference Semis (2nd Round)

print("Western Conference (Winner of 1 vs 8) vs (Winner of 4 vs 5)")
winnerOf_WinnerOf1v8vsWinnerOf4v5W = model.make_prediction(winner1v8W, winner4v5W, '2015-16').split()[-1]
print(winnerOf_WinnerOf1v8vsWinnerOf4v5W)
print("Western Conference (Winner of 2 vs 7) vs (Winner of 3 vs 6)")
winnerOf_WinnerOf2v7vsWinnerOf3v6W = model.make_prediction(winner2v7W, winner3v6W, '2015-16').split()[-1]
print(winnerOf_WinnerOf2v7vsWinnerOf3v6W)
##Western Conference Finals (3rd Round)

print("Winner of ((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))")
WCF_winner = model.make_prediction(winnerOf_WinnerOf1v8vsWinnerOf4v5W, winnerOf_WinnerOf2v7vsWinnerOf3v6W, '2015-16').split()[-1]
print("Western Conference Champion")
print(WCF_winner)

## NBA Finals

#Winner of (((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6))) vs (((Winner of 1 vs 8) vs (Winner of 4 vs 5)) vs ((Winner of 2 vs 7) vs (Winner of 3 vs 6)))
NBA_finals_winner = model.make_prediction(ECF_winner, WCF_winner, '2015-16').split()[-1]
print("NBA Champion:")
print(NBA_finals_winner)

"""**Sources:**

Bracket Images: 
http://www.espn.com/nba/bracket/_/year/2008
http://www.espn.com/nba/bracket/_/year/2010
http://www.espn.com/nba/bracket/_/year/2013
http://www.espn.com/nba/bracket/_/year/2016



"""